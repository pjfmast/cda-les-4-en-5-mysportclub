// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MySportsClub.Data;

#nullable disable

namespace MySportsClub.Migrations
{
    [DbContext(typeof(SportsClubContext))]
    partial class SportsClubContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MySportsClub.Models.Enrollment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.HasIndex("WorkoutID");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            MemberID = 1,
                            WorkoutID = 1
                        },
                        new
                        {
                            ID = 2,
                            MemberID = 1,
                            WorkoutID = 4
                        },
                        new
                        {
                            ID = 3,
                            MemberID = 2,
                            WorkoutID = 2
                        },
                        new
                        {
                            ID = 4,
                            MemberID = 2,
                            WorkoutID = 5
                        },
                        new
                        {
                            ID = 5,
                            MemberID = 2,
                            WorkoutID = 14
                        },
                        new
                        {
                            ID = 6,
                            MemberID = 3,
                            WorkoutID = 4
                        },
                        new
                        {
                            ID = 7,
                            MemberID = 3,
                            WorkoutID = 8
                        },
                        new
                        {
                            ID = 8,
                            MemberID = 4,
                            WorkoutID = 1
                        },
                        new
                        {
                            ID = 9,
                            MemberID = 4,
                            WorkoutID = 4
                        },
                        new
                        {
                            ID = 10,
                            MemberID = 4,
                            WorkoutID = 10
                        },
                        new
                        {
                            ID = 11,
                            MemberID = 4,
                            WorkoutID = 13
                        });
                });

            modelBuilder.Entity("MySportsClub.Models.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("StartMembership")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Esther",
                            StartMembership = new DateTime(2014, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            Name = "Anton",
                            StartMembership = new DateTime(2018, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            Name = "Manon",
                            StartMembership = new DateTime(2016, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            Name = "Joke",
                            StartMembership = new DateTime(2019, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            Name = "Jeroen",
                            StartMembership = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            Name = "Ellen",
                            StartMembership = new DateTime(2010, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            Name = "Eva",
                            StartMembership = new DateTime(2012, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            Name = "Anke",
                            StartMembership = new DateTime(2015, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            Name = "Koen",
                            StartMembership = new DateTime(2015, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MySportsClub.Models.Workout", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CapacityLeft")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Instructor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Workouts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CapacityLeft = 35,
                            EndTime = new DateTime(2022, 2, 21, 11, 0, 0, 0, DateTimeKind.Local),
                            Instructor = "Marcel",
                            Location = "Yoga studio",
                            StartTime = new DateTime(2022, 2, 21, 10, 15, 0, 0, DateTimeKind.Local),
                            Title = "Yin Yoga"
                        },
                        new
                        {
                            ID = 2,
                            CapacityLeft = 30,
                            EndTime = new DateTime(2022, 2, 21, 18, 0, 0, 0, DateTimeKind.Local),
                            Instructor = "Babs",
                            Location = "Yoga studio",
                            StartTime = new DateTime(2022, 2, 21, 17, 0, 0, 0, DateTimeKind.Local),
                            Title = "Pilates"
                        },
                        new
                        {
                            ID = 3,
                            CapacityLeft = 35,
                            EndTime = new DateTime(2022, 2, 22, 11, 15, 0, 0, DateTimeKind.Local),
                            Instructor = "Silvia",
                            Location = "Yoga studio",
                            StartTime = new DateTime(2022, 2, 22, 10, 15, 0, 0, DateTimeKind.Local),
                            Title = "Hot Yoga"
                        },
                        new
                        {
                            ID = 4,
                            CapacityLeft = 30,
                            EndTime = new DateTime(2022, 2, 22, 20, 15, 0, 0, DateTimeKind.Local),
                            Instructor = "Marie Jose",
                            Location = "Room 1",
                            StartTime = new DateTime(2022, 2, 22, 19, 15, 0, 0, DateTimeKind.Local),
                            Title = "Club Power"
                        },
                        new
                        {
                            ID = 5,
                            CapacityLeft = 25,
                            EndTime = new DateTime(2022, 2, 23, 10, 15, 0, 0, DateTimeKind.Local),
                            Instructor = "Eva",
                            Location = "Room 2",
                            StartTime = new DateTime(2022, 2, 23, 9, 15, 0, 0, DateTimeKind.Local),
                            Title = "XCO"
                        },
                        new
                        {
                            ID = 6,
                            CapacityLeft = 16,
                            EndTime = new DateTime(2022, 2, 23, 11, 15, 0, 0, DateTimeKind.Local),
                            Instructor = "Emilio",
                            Location = "Boxing Area",
                            StartTime = new DateTime(2022, 2, 23, 10, 15, 0, 0, DateTimeKind.Local),
                            Title = "B&K Training"
                        },
                        new
                        {
                            ID = 7,
                            CapacityLeft = 35,
                            EndTime = new DateTime(2022, 2, 23, 20, 0, 0, 0, DateTimeKind.Local),
                            Instructor = "Babette",
                            Location = "Room 1",
                            StartTime = new DateTime(2022, 2, 23, 19, 15, 0, 0, DateTimeKind.Local),
                            Title = "Callanetics"
                        },
                        new
                        {
                            ID = 8,
                            CapacityLeft = 18,
                            EndTime = new DateTime(2022, 2, 24, 11, 15, 0, 0, DateTimeKind.Local),
                            Instructor = "Jeroen",
                            Location = "Room 4",
                            StartTime = new DateTime(2022, 2, 24, 10, 15, 0, 0, DateTimeKind.Local),
                            Title = "Spinning"
                        },
                        new
                        {
                            ID = 9,
                            CapacityLeft = 30,
                            EndTime = new DateTime(2022, 2, 24, 18, 15, 0, 0, DateTimeKind.Local),
                            Instructor = "Silvia",
                            Location = "Yoga studio",
                            StartTime = new DateTime(2022, 2, 24, 17, 15, 0, 0, DateTimeKind.Local),
                            Title = "Vinyasa Yoga"
                        },
                        new
                        {
                            ID = 10,
                            CapacityLeft = 35,
                            EndTime = new DateTime(2022, 2, 25, 11, 0, 0, 0, DateTimeKind.Local),
                            Instructor = "Anke",
                            Location = "Room 1",
                            StartTime = new DateTime(2022, 2, 25, 10, 15, 0, 0, DateTimeKind.Local),
                            Title = "TBW"
                        },
                        new
                        {
                            ID = 11,
                            CapacityLeft = 12,
                            EndTime = new DateTime(2022, 2, 25, 11, 15, 0, 0, DateTimeKind.Local),
                            Instructor = "Emilio",
                            Location = "Room 2",
                            StartTime = new DateTime(2022, 2, 25, 10, 30, 0, 0, DateTimeKind.Local),
                            Title = "Shred and Burn"
                        },
                        new
                        {
                            ID = 12,
                            CapacityLeft = 8,
                            EndTime = new DateTime(2022, 2, 25, 19, 15, 0, 0, DateTimeKind.Local),
                            Instructor = "Mirjam",
                            Location = "Cycle Area",
                            StartTime = new DateTime(2022, 2, 25, 18, 15, 0, 0, DateTimeKind.Local),
                            Title = "Cycle Interval"
                        },
                        new
                        {
                            ID = 13,
                            CapacityLeft = 12,
                            EndTime = new DateTime(2022, 2, 26, 10, 15, 0, 0, DateTimeKind.Local),
                            Instructor = "Ronn",
                            Location = "Cycle Area",
                            StartTime = new DateTime(2022, 2, 26, 9, 15, 0, 0, DateTimeKind.Local),
                            Title = "Spinning"
                        },
                        new
                        {
                            ID = 14,
                            CapacityLeft = 6,
                            EndTime = new DateTime(2022, 2, 27, 11, 15, 0, 0, DateTimeKind.Local),
                            Instructor = "Lonneke",
                            Location = "Cycle Area",
                            StartTime = new DateTime(2022, 2, 27, 10, 15, 0, 0, DateTimeKind.Local),
                            Title = "SoulRide"
                        });
                });

            modelBuilder.Entity("MySportsClub.Models.Enrollment", b =>
                {
                    b.HasOne("MySportsClub.Models.Member", "Member")
                        .WithMany("Enrollments")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MySportsClub.Models.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("MySportsClub.Models.Member", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
